// Export the custom axios instance for direct use if needed
export { axiosInstance, customInstance } from './mutator/custom-instance';

// Export all generated API hooks and functions
export * from './generated/pplCoachApi';
export * from './generated/model';

// Export centralized utilities from both web and mobile apps
export * from './utils/pagination';
export * from './utils/query';
export * from './utils/health-check';
export { APIProvider, getQueryClient, useQueryClient } from './providers/api-provider';

// Import required types for manual session hooks
import { useMutation, useQuery, UseMutationOptions, UseQueryOptions } from '@tanstack/react-query';
import type { CreateSessionDto, WorkoutSessionDto } from './generated/model';

// Manual session creation hook (not generated by Orval)
export const useCreateSession = <TError = unknown>(
  options?: UseMutationOptions<WorkoutSessionDto, TError, CreateSessionDto>
) => {
  return useMutation({
    mutationFn: async (createSessionDto: CreateSessionDto): Promise<WorkoutSessionDto> => {
      const response = await customInstance<WorkoutSessionDto>({
        url: '/api/sessions',
        method: 'POST',
        data: createSessionDto,
      });
      return response;
    },
    ...options,
  });
};

// Manual session fetch hook (individual session by ID)
export const useGetSession = <TData = WorkoutSessionDto, TError = unknown>(
  sessionId: string,
  options?: UseQueryOptions<WorkoutSessionDto, TError, TData>
) => {
  return useQuery({
    queryKey: ['session', sessionId],
    queryFn: async () => {
      const response = await customInstance<WorkoutSessionDto>({
        url: `/api/sessions/${sessionId}`,
        method: 'GET',
      });
      return response;
    },
    enabled: !!sessionId,
    staleTime: 5 * 60 * 1000, // 5 minutes
    ...options,
  });
};

// Temporary stubs for other missing backend endpoints:
export const useDeleteSet = () => ({ mutate: () => {}, isLoading: false });
export const useGetProfile = () => ({ data: null, isLoading: false, error: null });
export const useCreateProfile = () => ({ mutate: () => {}, isLoading: false });

// Legacy aliases for renamed hooks (for backward compatibility)
// Note: This will be uncommented when the actual hook is generated
// export { useShuffleMovements as useShuffleMovementsMutation } from './generated/pplCoachApi';

// Note: Generated API hooks and types will be available after running `npm run api:generate`
// They will be automatically exported from './generated' and './generated/model'
